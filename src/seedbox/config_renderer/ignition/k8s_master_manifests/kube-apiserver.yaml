apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ config.k8s_hyperkube_image }}:{{ cluster.k8s_hyperkube_tag }}
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    {% if cluster.explicitly_advertise_addresses -%}
    - --advertise-address={{ node.ip }}
    {% endif -%}
    - --secure-port={{ config.k8s_apiserver_secure_port }}
    - --insecure-port={{ config.k8s_apiserver_insecure_port }}
    - --etcd-servers={{ cluster.etcd_client_endpoints|join(',') }}
    - --etcd-cafile={{ config.ca_cert_path }}
    - --etcd-certfile={{ config.node_cert_path }}
    - --etcd-keyfile={{ config.node_key_path }}
    - --storage-backend=etcd3
    - --allow-privileged=true
    - --service-cluster-ip-range={{ cluster.k8s_service_network }}
    - --admission-control={{ cluster.k8s_admission_control }}
    - --service-account-key-file={{ config.k8s_service_account_public_key_path }}
    {% if cluster.k8s_apiservers_audit_log -%}
    - --audit-log-path=/dev/stdout
    {% endif -%}
    {% if cluster.k8s_apiservers_swagger_ui -%}
    - --enable-swagger-ui
    {% endif -%}
    - --anonymous-auth=false                                      # * -> apiserver
    - --tls-cert-file={{ config.node_cert_path }}                 # * -> apiserver, auth cert
    - --tls-private-key-file={{ config.node_key_path }}           # * -> apiserver, sign key
    - --client-ca-file={{ config.ca_cert_path }}                  # * -> apiserver, ca
    - --kubelet-client-certificate={{ config.node_cert_path }}    # apiserver -> kubelet, auth cert
    - --kubelet-client-key={{ config.node_key_path }}             # apiserver -> kubelet, sign key
    {% if cluster.k8s_is_rbac_enabled -%}
    - --authorization-mode=RBAC
    {% else -%}
    - --authorization-mode=AlwaysAllow
    {% endif -%}
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: {{ config.cluster_credentials_path }}
      name: ssl-certs-cluster
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
    - mountPath: {{ config.k8s_secrets_path }}
      name: k8s-secrets
      readOnly: true
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
  volumes:
  - hostPath:
      path: {{ config.cluster_credentials_path }}
    name: ssl-certs-cluster
  - hostPath:
      path: {{ config.node_ca_certificates_path }}
    name: ssl-certs-host
  - hostPath:
      path: {{ config.k8s_secrets_path }}
    name: k8s-secrets
